// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "iliagurov@ya.ru"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "Получает список всех подписок",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Получение списка подписок",
                "responses": {}
            },
            "post": {
                "description": "Создает подписку с указанными параметрами",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Создание подписки",
                "parameters": [
                    {
                        "description": "Данные для создания подписки",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CUSubscription"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/get_for_period": {
            "post": {
                "description": "Выдает сумму всех подписок по указанным фильтрам за период",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Получение суммы за период",
                "parameters": [
                    {
                        "description": "Фильтры",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PeriodRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/{id}": {
            "get": {
                "description": "Получает информацию по подписке по ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Получение инфо о подписке",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID подписки",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Подписка",
                        "schema": {
                            "$ref": "#/definitions/models.Subscription"
                        }
                    }
                }
            },
            "put": {
                "description": "Обновляет данные существующей подписки по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Обновление подписки",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID подписки",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Новые данные подписки",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CUSubscription"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Подписка успешно обновлена",
                        "schema": {
                            "$ref": "#/definitions/models.Subscription"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет подписку по ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Удаление подписки",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID подписки",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CUSubscription": {
            "type": "object",
            "required": [
                "service_name"
            ],
            "properties": {
                "end_date": {
                    "type": "string",
                    "example": "12-2025"
                },
                "price": {
                    "type": "integer",
                    "example": 100
                },
                "service_name": {
                    "type": "string",
                    "example": "netflix"
                },
                "start_date": {
                    "type": "string",
                    "example": "01-2025"
                },
                "user_id": {
                    "type": "string",
                    "example": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
                }
            }
        },
        "models.PeriodRequest": {
            "type": "object",
            "required": [
                "end",
                "start"
            ],
            "properties": {
                "end": {
                    "type": "string",
                    "example": "12-2025"
                },
                "service_name": {
                    "type": "string",
                    "example": "netflix"
                },
                "start": {
                    "type": "string",
                    "example": "01-2025"
                },
                "user_id": {
                    "type": "string",
                    "example": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
                }
            }
        },
        "models.Subscription": {
            "type": "object",
            "required": [
                "price",
                "service_name",
                "start_date",
                "user_id"
            ],
            "properties": {
                "end_date": {
                    "type": "string",
                    "example": "12-2025"
                },
                "id": {
                    "type": "integer"
                },
                "price": {
                    "type": "integer",
                    "example": 100
                },
                "service_name": {
                    "type": "string",
                    "example": "netflix"
                },
                "start_date": {
                    "type": "string",
                    "example": "12-2025"
                },
                "user_id": {
                    "type": "string",
                    "example": "f47ac10b-58cc-4372-a567-0e02b2c3d479"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1/subscriptions",
	Schemes:          []string{},
	Title:            "Subscription Service API",
	Description:      "API для управления подписками",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
